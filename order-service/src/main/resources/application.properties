spring.application.name=order-service
server.port=8081
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=kafka-group
my.kafka.consumer.group-id=my-consumer-group

spring.kafka.template.default-topic = order-created
spring.kafka.template.payment-failed-topic = payment-failed


spring.kafka.consumer.auto-offset-reset=latest



# Bu, bir zaman dilimi içinde en fazla 10 adet iste?in kabul edilece?ini belirtir. Yani, bu zaman dilimi boyunca sadece 10 istek ba?ar?l? olur, di?er istekler reddedilir.
resilience4j.ratelimiter.instances.default.limit-for-period=10

#Her 1 dakika içinde 10 istek hakk? s?f?rlan?r. Yani her dakika en fazla 10 iste?e izin verilir, bir dakika sonra limit s?f?rlan?r ve yeniden 10 istek hakk? olu?ur.
resilience4j.ratelimiter.instances.default.limit-refresh-period=1m

# Bu ayar, bir iste?in s?n?rlama nedeniyle engellendi?inde ne kadar süre boyunca beklemesi gerekti?ini belirtir. E?er belirlenen süre içinde bir izin hakk? olu?ursa istek ba?ar?l? olur, aksi takdirde zaman a??m?na u?rar.
resilience4j.ratelimiter.instances.default.timeout-duration=2s
